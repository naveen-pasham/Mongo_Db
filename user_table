// app.js file

const path = require('path');

const express = require('express');
const bodyParser = require('body-parser');
const dotenv = require('dotenv');

const cors=require('cors');
const errorController = require('./controllers/error');

const adminRoutes = require('./routes/admin');
const shopRoutes = require('./routes/shop');

const mongoConnect = require('./util/database').mongoConnect;
const User=require('./models/user');

const app = express();
app.use(cors());
dotenv.config();
app.use(bodyParser.json({ extended: false }));



app.use(bodyParser.urlencoded({ extended: false }));
// app.use(express.static(path.join(__dirname, 'public')));

app.use((req,res,next)=>{
  User.findById('66121e0302d3885f041a3657').then(user=>{
    req.user=user;
    next();
  }).catch(err=>{
    console.log(err)
  })
 
})


app.use('/admin', adminRoutes);
app.use('/shop', shopRoutes);
app.use(errorController.get404);

mongoConnect(()=>{
  app.listen(2000)
});


/// user.js models

const getDb=require('../util/database').getDb;
const mongodb = require('mongodb');

class User{
  constructor(username,email){
    this.username=username;
    this.email=email;
     }

   save(){
    const db=getDb();
   
    return  db.collection('users').insertOne(this)
    .then(result=>{
      //console.log(result);
      return result
      
    }).catch(err=>{
      console.log(err)
    })

  }

static findById(prodId){
  const db=getDb();
    return db.collection('users')
    .findOne({_id: new mongodb.ObjectId(prodId)})
    .then(user=>{
     // console.log(user);
      return user
      
    }).catch(err=>{
      console.log(err)
    })
}


}

module.exports = User;


/// product .js models

const getDb=require('../util/database').getDb;
const mongodb = require('mongodb');

class Product{
  constructor(title,imageUrl,price,description,id,userId){
    this.title=title;
    this.price=price;
    this.imageUrl=imageUrl;
    this.description=description;
    this._id=id,
    this.userId=userId

  }

   save(){
    const db=getDb();
    let dbOp;
    if(this._id){
      // Update product
      dbOp=  db.collection('products').updateOne({_id: new mongodb.ObjectId(this._id)},{$set:this})
    }else{
      dbOp=  db.collection('products').insertOne(this)
    }
    return dbOp
    .then(result=>{
      //console.log(result);
      return result
      
    }).catch(err=>{
      console.log(err)
    })

  }
  static fetchAll(){
    const db=getDb();
    return db.collection('products')
    .find().toArray()
    .then(products=>{
     // console.log(products);
      return products
      
    }).catch(err=>{
      console.log(err)
    })
  }
static findById(prodId){
  const db=getDb();
    return db.collection('products')
    .find({_id: new mongodb.ObjectId(prodId)}).next()
    .then(product=>{
     // console.log(product);
      return product
      
    }).catch(err=>{
      console.log(err)
    })
}
static deleteById(prodId){
  const db=getDb();
    return db.collection('products')
    .deleteOne({_id: new mongodb.ObjectId(prodId)})
    .then(()=>{
      console.log("Deleted");
     // return product
      
    }).catch(err=>{
      console.log(err)
    })
}

}

module.exports = Product;


// admin.js controllers

const Product = require('../models/product');
const mongodb = require('mongodb');

const ObjectId= mongodb.ObjectId;


exports.postAddProduct = async (req, res, next) => {
 // console.log(req.body)
  const title = req.body.title;
  const imageUrl = req.body.imageUrl;
  const price = req.body.price;
  const description = req.body.description;
 const product=new Product(title,imageUrl,price,description,null,req.user._id);
 product
 .save()
    .then(async (result) => {
      console.log(JSON.stringify(result))
    await res.send(result)
    })
    .catch(err => {
      console.log(err);
    });
};

exports.postEditProduct = (req, res, next) => {
  const prodId = req.body.Id;
  const updatedTitle = req.body.title;
  const updatedPrice = req.body.price;
  const updatedImageUrl = req.body.imageUrl;
  const updatedDesc = req.body.description;
  const product=new Product(updatedTitle,updatedImageUrl,updatedPrice,updatedDesc,new ObjectId(prodId),req.user._id);
  product.save()
    .then(result => {
     res.json(result)
    })
    .catch(err => console.log(err));
};

exports.getProducts = (req, res, next) => {
  Product
    .fetchAll()
    .then(products => {
     res.json(products)
    })
    .catch(err => console.log(err));
};

exports.postDeleteProduct = (req, res, next) => {
  const prodId = req.params.productId;
 
  Product.deleteById(prodId)
    .then(() => {
      res.json({message:'Product Deleted'})
    })
    .catch(err => console.log(err));
};
